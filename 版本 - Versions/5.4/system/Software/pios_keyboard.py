from tkinter import *
from tkinter.messagebox import showinfo
import tkmacosx
import keyboard
import os

def show(window):
    if os.path.exists(os.getcwd() + '/project_pios/system/Software/keyboard') == True:
        if os.path.exists(os.getcwd() + '/project_pios/system/Software/keyboard/tip.txt') == True:
            with open(os.getcwd() + '/project_pios/system/Software/keyboard/tip.txt', 'r') as readfile:
                if readfile.read() == '1':
                    pass
                else:
                    showinfo(message='右键第一排字母可以打符号, 右键退格键可以清空')
                    with open(os.getcwd() + '/project_pios/system/Software/keyboard/tip.txt', 'w') as file:
                        file.write('1')
        else:
            with open(os.getcwd() + '/project_pios/system/Software/keyboard/tip.txt', 'w') as file:
                file.write('1')
                showinfo(message='右键第一排字母可以打符号, 右键退格键可以清空')
                pass
    else:
        os.mkdir(os.getcwd() + '/project_pios/system/Software/keyboard')
        with open(os.getcwd() + '/project_pios/system/Software/keyboard/tip.txt', 'w') as file:
            file.write('1')
            showinfo(message='右键第一排字母可以打符号, 右键退格键可以清空')
            pass

    try:
        hides()
    except:
        pass

    global keyboards
    keyboards = Frame(window, bg='#ececec')
    keyboards.place(relx=0.5, rely=0.75, anchor=CENTER, relwidth=0.995, relheight=0.4)

    def switch_numbers(event):
        q.place_forget()
        w.place_forget()
        e.place_forget()
        e.place_forget()
        r.place_forget()
        t.place_forget()
        y.place_forget()
        u.place_forget()
        i.place_forget()
        o.place_forget()
        p.place_forget()
        a.place_forget()
        s.place_forget()
        d.place_forget()
        f.place_forget()
        g.place_forget()
        h.place_forget()
        j.place_forget()
        k.place_forget()
        l.place_forget()
        z.place_forget()
        x.place_forget()
        c.place_forget()
        v.place_forget()
        b.place_forget()
        n.place_forget()
        m.place_forget()

        one.place(relx=0.25, rely=0.15, anchor=CENTER)
        two.place(relx=0.5, rely=0.15, anchor=CENTER)
        three.place(relx=0.75, rely=0.15, anchor=CENTER)
        four.place(relx=0.25, rely=0.4, anchor=CENTER)
        five.place(relx=0.5, rely=0.4, anchor=CENTER)
        six.place(relx=0.75, rely=0.4, anchor=CENTER)
        seven.place(relx=0.25, rely=0.65, anchor=CENTER)
        eight.place(relx=0.5, rely=0.65, anchor=CENTER)
        nine.place(relx=0.75, rely=0.65, anchor=CENTER)
        zero.place(relx=0.5, rely=0.85, anchor=CENTER)

        comma.place_forget()
        space.place_forget()
        period.place_forget()
        numbers['text'] = 'abc'
        numbers.bind("<Button-1>", switch_letters)

    def switch_letters(event):
        q.place(relx=0.05, rely=0.15, anchor=CENTER)
        w.place(relx=0.15, rely=0.15, anchor=CENTER)
        e.place(relx=0.25, rely=0.15, anchor=CENTER)
        r.place(relx=0.35, rely=0.15, anchor=CENTER)
        t.place(relx=0.45, rely=0.15, anchor=CENTER)
        y.place(relx=0.55, rely=0.15, anchor=CENTER)
        u.place(relx=0.65, rely=0.15, anchor=CENTER)
        i.place(relx=0.75, rely=0.15, anchor=CENTER)
        o.place(relx=0.85, rely=0.15, anchor=CENTER)
        p.place(relx=0.95, rely=0.15, anchor=CENTER)
        a.place(relx=0.1, rely=0.4, anchor=CENTER)
        s.place(relx=0.2, rely=0.4, anchor=CENTER)
        d.place(relx=0.3, rely=0.4, anchor=CENTER)
        f.place(relx=0.4, rely=0.4, anchor=CENTER)
        g.place(relx=0.5, rely=0.4, anchor=CENTER)
        h.place(relx=0.6, rely=0.4, anchor=CENTER)
        j.place(relx=0.7, rely=0.4, anchor=CENTER)
        k.place(relx=0.8, rely=0.4, anchor=CENTER)
        l.place(relx=0.9, rely=0.4, anchor=CENTER)
        z.place(relx=0.15, rely=0.65, anchor=CENTER)
        x.place(relx=0.25, rely=0.65, anchor=CENTER)
        c.place(relx=0.35, rely=0.65, anchor=CENTER)
        v.place(relx=0.45, rely=0.65, anchor=CENTER)
        b.place(relx=0.55, rely=0.65, anchor=CENTER)
        n.place(relx=0.65, rely=0.65, anchor=CENTER)
        m.place(relx=0.75, rely=0.65, anchor=CENTER)

        one.place_forget()
        two.place_forget()
        three.place_forget()
        four.place_forget()
        five.place_forget()
        six.place_forget()
        seven.place_forget()
        eight.place_forget()
        nine.place_forget()
        zero.place_forget()

        period.place(relx=0.2, rely=0.95, anchor=CENTER)
        space.place(relx=0.5, rely=0.95, anchor=CENTER)
        comma.place(relx=0.85, rely=0.65, anchor=CENTER)

        numbers['text'] = '123'
        numbers.bind("<Button-1>", switch_numbers)

    def clear(event):
        keyboard.press('command+a')
        keyboard.press_and_release('backspace')
        keyboard.release('command+a')

    def unshow(event):
        keyboards.destroy()

    q = Label(keyboards, text='q', font=("Arial", 30), bg='#ececec')
    w = Label(keyboards, text='w', font=("Arial", 30), bg='#ececec')
    e = Label(keyboards, text='e', font=("Arial", 30), bg='#ececec')
    r = Label(keyboards, text='r', font=("Arial", 30), bg='#ececec')
    t = Label(keyboards, text='t', font=("Arial", 30), bg='#ececec')
    y = Label(keyboards, text='y', font=("Arial", 30), bg='#ececec')
    u = Label(keyboards, text='u', font=("Arial", 30), bg='#ececec')
    i = Label(keyboards, text='i', font=("Arial", 30), bg='#ececec')
    o = Label(keyboards, text='o', font=("Arial", 30), bg='#ececec')
    p = Label(keyboards, text='p', font=("Arial", 30), bg='#ececec')
    a = Label(keyboards, text='a', font=("Arial", 30), bg='#ececec')
    s = Label(keyboards, text='s', font=("Arial", 30), bg='#ececec')
    d = Label(keyboards, text='d', font=("Arial", 30), bg='#ececec')
    f = Label(keyboards, text='f', font=("Arial", 30), bg='#ececec')
    g = Label(keyboards, text='g', font=("Arial", 30), bg='#ececec')
    h = Label(keyboards, text='h', font=("Arial", 30), bg='#ececec')
    j = Label(keyboards, text='j', font=("Arial", 30), bg='#ececec')
    k = Label(keyboards, text='k', font=("Arial", 30), bg='#ececec')
    l = Label(keyboards, text='l', font=("Arial", 30), bg='#ececec')
    z = Label(keyboards, text='z', font=("Arial", 30), bg='#ececec')
    x = Label(keyboards, text='x', font=("Arial", 30), bg='#ececec')
    c = Label(keyboards, text='c', font=("Arial", 30), bg='#ececec')
    v = Label(keyboards, text='v', font=("Arial", 30), bg='#ececec')
    b = Label(keyboards, text='b', font=("Arial", 30), bg='#ececec')
    n = Label(keyboards, text='n', font=("Arial", 30), bg='#ececec')
    m = Label(keyboards, text='m', font=("Arial", 30), bg='#ececec')

    one = Label(keyboards, text='1', font=("Arial", 30), bg='#ececec')
    two = Label(keyboards, text='2', font=("Arial", 30), bg='#ececec')
    three = Label(keyboards, text='3', font=("Arial", 30), bg='#ececec')
    four = Label(keyboards, text='4', font=("Arial", 30), bg='#ececec')
    five = Label(keyboards, text='5', font=("Arial", 30), bg='#ececec')
    six = Label(keyboards, text='6', font=("Arial", 30), bg='#ececec')
    seven = Label(keyboards, text='7', font=("Arial", 30), bg='#ececec')
    eight = Label(keyboards, text='8', font=("Arial", 30), bg='#ececec')
    nine = Label(keyboards, text='9', font=("Arial", 30), bg='#ececec')
    zero = Label(keyboards, text='0', font=("Arial", 30), bg='#ececec')

    comma = Label(keyboards, text=',', font=("Arial", 25), bg='#ececec')
    period = Label(keyboards, text='.', font=("Arial", 25), bg='#ececec')
    numbers = Label(keyboards, text='123', font=("Arial", 25), bg='#ececec')
    space = Label(keyboards, text='< --- space --- >', font=("Arial", 15), bg='#ececec')
    backspace = Label(keyboards, text='⬅', font=("Arial", 25), bg='#ececec')
    done = tkmacosx.Button(keyboards, text='Done', borderless=1, bg='#4479fb', fg='white', activebackground='white', activeforeground='#4479fb', width=80, height=40, command=lambda: keyboard.press_and_release('return'))
    hide = Label(keyboards, text='⬇', font=("Arial", 25), bg='#ececec')

    q.place(relx=0.05, rely=0.15, anchor=CENTER)
    w.place(relx=0.15, rely=0.15, anchor=CENTER)
    e.place(relx=0.25, rely=0.15, anchor=CENTER)
    r.place(relx=0.35, rely=0.15, anchor=CENTER)
    t.place(relx=0.45, rely=0.15, anchor=CENTER)
    y.place(relx=0.55, rely=0.15, anchor=CENTER)
    u.place(relx=0.65, rely=0.15, anchor=CENTER)
    i.place(relx=0.75, rely=0.15, anchor=CENTER)
    o.place(relx=0.85, rely=0.15, anchor=CENTER)
    p.place(relx=0.95, rely=0.15, anchor=CENTER)
    a.place(relx=0.1, rely=0.4, anchor=CENTER)
    s.place(relx=0.2, rely=0.4, anchor=CENTER)
    d.place(relx=0.3, rely=0.4, anchor=CENTER)
    f.place(relx=0.4, rely=0.4, anchor=CENTER)
    g.place(relx=0.5, rely=0.4, anchor=CENTER)
    h.place(relx=0.6, rely=0.4, anchor=CENTER)
    j.place(relx=0.7, rely=0.4, anchor=CENTER)
    k.place(relx=0.8, rely=0.4, anchor=CENTER)
    l.place(relx=0.9, rely=0.4, anchor=CENTER)
    z.place(relx=0.15, rely=0.65, anchor=CENTER)
    x.place(relx=0.25, rely=0.65, anchor=CENTER)
    c.place(relx=0.35, rely=0.65, anchor=CENTER)
    v.place(relx=0.45, rely=0.65, anchor=CENTER)
    b.place(relx=0.55, rely=0.65, anchor=CENTER)
    n.place(relx=0.65, rely=0.65, anchor=CENTER)
    m.place(relx=0.75, rely=0.65, anchor=CENTER)

    comma.place(relx=0.85, rely=0.65, anchor=CENTER)
    numbers.place(relx=0.07, rely=0.95, anchor=CENTER)
    period.place(relx=0.2, rely=0.95, anchor=CENTER)
    space.place(relx=0.5, rely=0.95, anchor=CENTER)
    backspace.place(relx=0.925, rely=0.8, anchor=CENTER)
    done.place(relx=0.9, rely=0.93, anchor=CENTER)
    hide.place(relx=0.07, rely=0.8, anchor=CENTER)

    q.bind("<Button-1>", lambda event: keyboard.press_and_release('q'))
    w.bind("<Button-1>", lambda event: keyboard.press_and_release('w'))
    e.bind("<Button-1>", lambda event: keyboard.press_and_release('e'))
    r.bind("<Button-1>", lambda event: keyboard.press_and_release('r'))
    t.bind("<Button-1>", lambda event: keyboard.press_and_release('t'))
    y.bind("<Button-1>", lambda event: keyboard.press_and_release('y'))
    u.bind("<Button-1>", lambda event: keyboard.press_and_release('u'))
    i.bind("<Button-1>", lambda event: keyboard.press_and_release('i'))
    o.bind("<Button-1>", lambda event: keyboard.press_and_release('o'))
    p.bind("<Button-1>", lambda event: keyboard.press_and_release('p'))
    a.bind("<Button-1>", lambda event: keyboard.press_and_release('a'))
    s.bind("<Button-1>", lambda event: keyboard.press_and_release('s'))
    d.bind("<Button-1>", lambda event: keyboard.press_and_release('d'))
    f.bind("<Button-1>", lambda event: keyboard.press_and_release('f'))
    g.bind("<Button-1>", lambda event: keyboard.press_and_release('g'))
    h.bind("<Button-1>", lambda event: keyboard.press_and_release('h'))
    j.bind("<Button-1>", lambda event: keyboard.press_and_release('j'))
    k.bind("<Button-1>", lambda event: keyboard.press_and_release('k'))
    l.bind("<Button-1>", lambda event: keyboard.press_and_release('l'))
    z.bind("<Button-1>", lambda event: keyboard.press_and_release('z'))
    x.bind("<Button-1>", lambda event: keyboard.press_and_release('x'))
    c.bind("<Button-1>", lambda event: keyboard.press_and_release('c'))
    v.bind("<Button-1>", lambda event: keyboard.press_and_release('v'))
    b.bind("<Button-1>", lambda event: keyboard.press_and_release('b'))
    n.bind("<Button-1>", lambda event: keyboard.press_and_release('n'))
    m.bind("<Button-1>", lambda event: keyboard.press_and_release('m'))

    q.bind("<Button-2>", lambda event: keyboard.press_and_release('shift+1'))
    w.bind("<Button-2>", lambda event: keyboard.press_and_release('shift+2'))
    e.bind("<Button-2>", lambda event: keyboard.press_and_release('shift+3'))
    r.bind("<Button-2>", lambda event: keyboard.press_and_release('shift+4'))
    t.bind("<Button-2>", lambda event: keyboard.press_and_release('shift+5'))
    y.bind("<Button-2>", lambda event: keyboard.press_and_release('shift+6'))
    u.bind("<Button-2>", lambda event: keyboard.press_and_release('shift+7'))
    i.bind("<Button-2>", lambda event: keyboard.press_and_release('shift+8'))
    o.bind("<Button-2>", lambda event: keyboard.press_and_release('shift+9'))
    p.bind("<Button-2>", lambda event: keyboard.press_and_release('shift+0'))

    one.bind("<Button-1>", lambda event: keyboard.press_and_release('1'))
    two.bind("<Button-1>", lambda event: keyboard.press_and_release('2'))
    three.bind("<Button-1>", lambda event: keyboard.press_and_release('3'))
    four.bind("<Button-1>", lambda event: keyboard.press_and_release('4'))
    five.bind("<Button-1>", lambda event: keyboard.press_and_release('5'))
    six.bind("<Button-1>", lambda event: keyboard.press_and_release('6'))
    seven.bind("<Button-1>", lambda event: keyboard.press_and_release('7'))
    eight.bind("<Button-1>", lambda event: keyboard.press_and_release('8'))
    nine.bind("<Button-1>", lambda event: keyboard.press_and_release('9'))
    zero.bind("<Button-1>", lambda event: keyboard.press_and_release('0'))

    comma.bind("<Button-1>", lambda event: keyboard.write(', '))
    space.bind("<Button-1>", lambda event: keyboard.write(' '))
    period.bind("<Button-1>", lambda event: keyboard.press_and_release('. '))
    backspace.bind("<Button-1>", lambda event: keyboard.press_and_release('backspace'))
    backspace.bind('<Button-2>', clear)
    numbers.bind("<Button-1>", switch_numbers)
    hide.bind("<Button-1>", unshow)

def hides():
    global keyboards
    keyboards.destroy()